#summary JMX based extras to ease monitoring

= Introduction =

Extras on top of Java SE (e.g. Thread Pool) and Spring Framework (e.g. JMS Listener) to ease monitoring.

=  Java Util Concurrent Thread Pool Executor =

{{{ThreadPoolExecutorFactory}}} allows to monitor a {{{java.util.concurrent.ThreadPoolExecutor}}}.

 * JMX Object Name: {{{"java.util.concurrent:type=ThreadPoolExecutor,name=${spring-bean-name}"}}} where {{{"${spring-bean-name}"}}} is the name of the spring object
 * Metrics: 
  ** {{{ActiveCount}}}: number of currently active executor threads, 
  ** {{{QueueRemainingCapacity}}}: slots available on the executor queue,
  ** {{{RejectedExecutionCount}}}: number of tasks that have been rejected because the executor was full,
  ** {{{TaskCount}}}: number of tasks that have been submitted to this executor, including the rejected ones,
 * Spring configuration:
  {{{
<beans ...>
   <bean id="threadPool" class="fr.xebia.springframework.concurrent.ThreadPoolExecutorFactory">
      <property name="nbThreads" value="10" />
      <property name="queueCapacity" value="15" />
      <property name="threadNamePrefix" value="my-pool" />
   </bean>
   ...
</beans>
}}} 
 * The {{{ThreadPoolExecutorFactory}}} is a Spring factory of a subclass of {{{java.util.concurrent.ThreadPoolExecutor}}},
 * Hyperic plugin: [https://xebia-france.googlecode.com/svn/management/xebia-management-extras/trunk/src/main/hyperic/tomcat-extras-executorservice-plugin.xml tomcat-extras-executorservice-plugin.xml] (1)

= JMS Connection Factory =

{{{ManagedConnectionFactory}}} allows to monitor JMS resources. Exceptions ratios will help you to diagnose failures of the JMS Broker, increase of the send duration will help you to see saturation of the JMS Broker and changes of the creation rates will indicate changes in the usage of your application.

Please note that this {{{ManagedConnectionFactory}}} is not intended to help you do diagnose JMS resources leaks and thus does not monitor resource's {{{close()}}} calls.

 * JMX Object Name: {{{"javax.jms:type=ConnectionFactory,name=${spring-bean-name}"}}} where {{{"${spring-bean-name}"}}} is the name of the spring object
 * Metrics:
  * {{{CreateConnectionCount}}}, {{{CreateConnectionExceptionCount}}},
  * {{{CreateMessageProducerCount}}}, {{{CreateMessageProducerExceptionCount}}},
  * {{{CreateMessageConsumerCount}}}, {{{CreateMessageConsumerExceptionCount}}},
  * {{{CreateSessionCount}}}, {{{CreateSessionExceptionCount}}},
  * {{{SendMessageCount}}}, {{{SendMessageExceptionCount}}}, {{{SendMessageDurationInMillis}}},
  * {{{ReceiveMessageCount}}}, {{{ReceiveMessageExceptionCount}}}, {{{ReceiveMessageDurationInMillis}}}.
 * Spring configuration:
  {{{
<beans ...>
   <bean id="connectionFactory" class="fr.xebia.management.jms.SpringManagedConnectionFactory">
      <property name="delegate">
         <bean class="org.apache.activemq.ActiveMQConnectionFactory">
            <property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=true" />
         </bean>
      </property>
   </bean>
   ...
</beans>
}}} 
 * {{{ManagedConnectionFactory}}} is a wrapper of a JMS 1.1 {{{javax.jms.ConnectionFactory}}}. It has been tested with Active MQ 5.3.2 and WebSphere MQ 7.0.1.2.
 * A non Spring enabled version is available with {{{fr.xebia.management.jms.ManagedConnectionFactory}}}.
 * Hyperic plugin: [http://xebia-france.googlecode.com/svn/management/xebia-management-extras/trunk/src/main/hyperic/tomcat-extras-jms-plugin.xml tomcat-extras-jms-plugin.xml] (1)

= Spring JMS Caching Connection Factory =

{{{ManagedCachingConnectionFactory}}} allows to manage a Spring JMS Caching Connection Factory via JMX. 

 * JMX Object Name: {{{"javax.jms:type=CachingConnectionFactory,name=${spring-bean-name}"}}} where {{{"${spring-bean-name}"}}} is the name of the spring object
 * Operations:
  * {{{resetConnection}}} : close the underlying connection and its associated sessions, message producers and message consumers. 
 * Attributes:
  * {{{CacheConsumers}}}, {{{CacheProducers}}}, {{{ReconnectOnException}}} : boolean configuration parameters
  * {{{SessionCacheSize}}} : max size of the sessions cache.

 * Spring configuration:
  {{{
<beans ...>
   <bean id="cachingConnectionFactory" class="fr.xebia.springframework.jms.ManagedCachingConnectionFactory">
      <property name="targetConnectionFactory" ref="myConnectionFactory" />
   </bean>
   ...
</beans>
}}} 
 * {{{ManagedCachingConnectionFactory}}} is a subclass of the {{{org.springframework.jms.connection.CachingConnectionFactory}}}. It has been tested with Active MQ 5.3.2 and WebSphere MQ 7.0.1.2.
 * Hyperic plugin: [http://xebia-france.googlecode.com/svn/management/xebia-management-extras/trunk/src/main/hyperic/tomcat-extras-jms-plugin.xml tomcat-extras-jms-plugin.xml] (only exposes the {{{resetConnection}}} operation) (1)

= Jakarta Commons DBCP JDBC Data Source =

{{{ManagedBasicDataSource}}} allows to monitora [http://commons.apache.org/dbcp/ Jakarta Commons DBCP Data Source]. It is not intended to monitor JDBC resource leaks and thus it does not monitor resource's {{{close()}}}.

 * JMX Object Name: {{{"javax.sql:type=DataSource,name=${spring-bean-name}"}}} where {{{"${spring-bean-name}"}}} is the name of the spring object
 * Metrics: 
  ** {{{NumActive}}}: number of currently borrowed jdbc connections, 
  ** {{{NumIdle}}}: number of idle jdbc connections available in the pool,
 * Spring configuration:
  {{{
<beans ...>
   <bean id="myDataSource" class="fr.xebia.springframework.jdbc.ManagedBasicDataSource">
      <property name="url" value="jdbc:h2:mem:jmx-demo-db" />
      <property name="driverClassName" value="org.h2.Driver" />
      <property name="username" value="sa" />
      <property name="password" value="" />
      <property name="maxActive" value="10" />
      <property name="maxWait" value="50" />
   </bean>
   ...
</beans>
}}} 
 * The {{{ManagedBasicDataSource}}} is a subclass of [http://commons.apache.org/dbcp/ Jakarta Commons DBCP] {{{org.apache.commons.dbcp.BasicDataSource}}}; it has been used with version 1.4,
 * Hyperic plugin: [https://xebia-france.googlecode.com/svn/management/xebia-management-extras/trunk/src/main/hyperic/tomcat-extras-dbcp-plugin.xml tomcat-extras-dbcp-plugin.xml] (1)


---- 

(1) Drop the hyperic plugin xml file under {{{ ${HYPERIC_HOME}/hq-plugins }}} (e.g. next to {{{ ${HYPERIC_HOME}/agent-4.3.0 }}}