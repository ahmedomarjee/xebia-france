#summary JMX based extras to ease monitoring.
#labels Featured

= Introduction =

Extras on top of Java SE (e.g. Thread Pool) and Spring Framework (e.g. JMS Listener) to ease monitoring.

= @Profiled Annotation =

See [ProfiledAnnotation] page. Monitor methods invocations via JMX MBeans declaring:
  {{{
public class MyService {

   @Profiled
   public void myOperation(...) {
      ...
   }
}
}}}

= Jakarta Commons DBCP JDBC Data Source Monitoring =

See [ManagedBasicDataSource]. Offer JMX MBean based monitoring and Spring XML namespace based configuration to your [http://commons.apache.org/dbcp/ Jakarta Commons DBCP Data Source] declaring :
   {{{
<beans ...>
   <management:dbcp-datasource id="myDataSource">
      <management:url value="jdbc:h2:mem:dbcp-test" />
      <management:driver-class-name value="org.h2.Driver" />
      <management:username value="sa" />
      <management:password value="" />
      <management:max-active value="10" />
      <!-- ... any other useful configuration param -->
   </management:dbcp-datasource>
   ...
</beans>
}}}

=  Java Util Concurrent Executor Service / Thread Pool Executor Monitoring =

See [ManagedExecutorService]. Declare a fully managed Executor Service with JMX Mbean monitoring declaring:
   {{{
<beans ...>
   <management:executor-service 
       id="my-executor" 
       pool-size="1-10" 
       queue-capacity="5" />
   ...
</beans>
}}}

= JMS Connection Factory Monitoring =

See [ManagedJmsConnectionFactory]. Expose metrics of a JMS ConnectionFactory via a JMX MBean with:
   {{{
<beans ...>
   <!-- wrap 'myConnectionFactory' in a JMX enabled connection factory -->
   <management:jms-connection-factory-wrapper 
      id="connectionFactory" 
      connection-factory="myConnectionFactory" />
   ...
</beans>
}}}

= Spring JMS Caching Connection Factory Monitoring =

See [ManagedCachingConnectionFactory]. Expose your Spring JMS CachingConnectionFactory via a JMX MBean (reset connections via JMX, etc) declaring:

   {{{
<beans ...>
   <!-- wrap 'rawConnectionFactory' in a JMX enabled caching connection factory -->
   <management:jms-caching-connection-factory 
      id="connectionFactory" 
      connection-factory="rawConnectionFactory" />
   ...

</beans>
}}}

= EhCache JMX MBeans =

[http://ehcache.org/ EhCache] already has all the JMX MBeans needed to monitor caches, Simply expose these JMX MBeans declaring:
   {{{
<beans ...>
   ...
   <management:eh-cache-management-service 
      mbean-server="mbeanServer" 
      cache-manager="cacheManager" />

</beans>
}}}



= Servlet Context Aware MBean Server =

See [ServletContextAwareMbeanServer]. Prevent collision of JMX MBeans of collocated web application suffixing ObjectNames with attributes uniquely identifying your web application ({{{servletContext.contextPath}}}, {{{tomcatServletContext.hostName}}}, etc) replacing the {{{<context:mbean-server />}}} by:
   {{{
<beans ...>

   <management:servlet-context-aware-mbean-server id="mbeanServer"/>
   ...
</beans>

---- 

(1) See [XebiaManagementExtrasHypericPlugins]