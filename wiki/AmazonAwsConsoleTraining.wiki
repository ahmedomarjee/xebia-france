#summary Discover Amazon Aws Console

<wiki:toc max_depth="2" />
= Access = 
 
 https://xebia-france.signin.aws.amazon.com/console
 
 = Create Database instance =
 
 Amazon AWS propose Relational Database Service (RDS) to create ready to use database
 
 # Select RDS
	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-1.png
 # Select the region
	<img src="http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-select-eu-west-region.png" />
 # Click on "Launch DB Instance" and select MYSQL
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-2.png
 # Configure Database - database
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-3.png
 # Configure Database - instance
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-4.png
 # Configure Database - backup
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-5.png
 # Launch DB Instance
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-6.png
 # Note the DB instance hostname (endpoint)
 	! The database will be available in a few minutes.
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/rds-8.png
 

= Create Tomcat instances = 
== Create EC2 Instances ==

 # Connect to AWS console 	
 # On "EC2" tab, select your region (e.g. "EU West (Ireland)")
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-select-eu-west-region.png
 # On "EC2 Dashboard", click on "Launch new instance" 	
 # Select your AMI (e.g. "Basic 32-bit Amazon Linux AMI 2011.02.1 Beta")
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-launch-linux-instance-1.png
 # Select the instance size (e.g. "Micro")
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-launch-linux-instance-2-instance-details.png
 # Type the name of your server (e.g. "petclinic-(my-trigram)-1")
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-launch-linux-instance-4-instance-details.png 	
 # Select a key-pair that will be used for SSH connection (e.g. "xebia-france.pem")
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-launch-linux-instance-5-key-pair.png
 # Select the "tomcat" security group. This security group allow SSH (22) and Tomcat (8080) communication
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/ec2-security-group.png
 # Review the configuration and click on "Launch"
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-launch-linux-instance-7-review.png
 # Repeat steps 3 to 9 and create a second EC2 instance

 == Connect to an Amazon Linux Server ==

 # Go to AWS EC2 tab
 # Click on your server
 # Drop down the "Instance Action" list
 # Select "Connect"
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-connect-instance.png
 # Copy paste the command line
 	http://xebia-france.googlecode.com/svn/wiki/aws-img/aws-ec2-connect-instance-2.png
 # SSH connect to the server as "ec2-user"
 	<pre>ssh -i xebia-france.pem ec2-user@ec2-46-137-58-156.eu-west-1.compute.amazonaws.com</pre> 
 	
 == Install JVM and Tomcat ==
 
 The Amazon AMI are RPM based Linux distribution so we're using YUM to install JVM and Tomcat
  
 # Connect to an EC2 instance
 	<pre>ssh -i xebia-france.pem ec2-user@<hostname>.compute.amazonaws.com</pre>
 # Login as root
 	<pre>sudo -s</pre>
 # Connect to an EC2 instance
 	<pre>yum install java-1.6.0-openjdk</pre>
 # Install Tomcat 6
 	<pre>yum install tomcat6 tomcat6-admin-webapps tomcat6-webapps</pre>
 # Install MySQL JDBC Driver 
 	<pre>yum install mysql-connector-java</pre>
 	<pre>ln -s /usr/share/java/mysql-connector-java.jar /usr/share/tomcat6/lib/</pre>
 # Run tomcat
 	<pre>/etc/init.d/tomcat6 start</pre>
 # Repeat this steps on the second instance
 
 == Install Petclinic web app ==
 # Download WAR on Amazon S3
  	<pre>wget --no-check-certificate https://s3-eu-west-1.amazonaws.com/java-infra-as-code-on-amzn-ec2-1/petclinic.war</pre>
 # Modify catalina.properties to add MySQL support to petclinic
  	<pre>vi /usr/share/tomcat6/conf/catalina.properties</pre>
  	Add the following lines :
  	{{{
# PETCLINIC ENVIRONMENT VARIABLES
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://<rds-endpoint>:3306/petclinic
jdbc.username=petclinic
jdbc.password=petclinic

# Properties that control the population of schema and data for a new data source
jdbc.initLocation=classpath:db/mysql/initDB.txt
jdbc.dataLocation=classpath:db/mysql/populateDB.txt

# Property that determines which Hibernate dialect to use
# (only applied with "applicationContext-hibernate.xml")
hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Property that determines which database to use with an AbstractJpaVendorAdapter
jpa.database=MYSQL
  	}}}
 # Install the webapp
  	<pre>cp petclinic.war /usr/share/tomcat6/webapps/</pre>
 # Repeat on each EC2 Tomcat instance
