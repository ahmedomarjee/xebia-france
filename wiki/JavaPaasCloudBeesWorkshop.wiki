#summary Discover Java PaaS Cloud with CloudBees

= Labs =

 * Generated Lab subject JavaPaasCloudBeesWorkshop
 * Workshop setup and architecture : JavaPaasCloudBeesWorkshopSetup

= Workshop requirements =

 * Git client
 * Apache Maven
 * SSH Client

= Workshop Steps =

== @DEV ==

 * Configure GIT repository

 # Get your credentials and log in CloudBees
 # Go to the Account tab
 # Access to your User Settings and paste the SSH public key you have received by e-mail
 # Backup your own .ssh folder if necessary and copy/past both keys into a new .ssh folder
 # Update permissions by using this command:
{{{
$ chmod -R 700 .ssh
}}}
 # Get the zip file containing the petclinic application from the wiki and unzip it in your local workspace
 # Initialize a new Git local repository by using the command: 
{{{
$ cd petclinic #or your existing project directory
$ git init
$ git remote add origin ssh://git@git.cloudbees.com/atelier-xebia/cloudbeesXX.git
$ git add -A  # if you want to check everything in
$ git commit -m 'Initial checkin'
$ git push origin master
}}}

 * Create a new job on Jenkins for Continuous integration

 # Go back to the Home page in CloudBees and click on Jenkins build
 # Create a new Job from the left menu with the job name "cloudbeesXX-ci" and tick "Build a Maven2/3 project"
 # On the "Code source management" part choose "Git" and fill these parameters:
{{{
URL of repository=ssh://git@git.cloudbees.com/atelier-xebia/cloudbeesXX.git
Branch Specifier (blank for default)=** # For avoiding issue
}}}
 # On the "Build triggers" part tick poll SCM by filling the CRON expression
{{{
* * * * * # every minute
}}}
 # On the "Build" part indicate the Maven goal
{{{
clean package
}}}

 * Configure Sonar on Jenkins and use it
 * Use Artifactory for managing Maven repository
 * Release of a new version of the application

== @TEST ==

 * Create a new Selenium test in your IDE following the instructions [https://saucelabs.com/docs/ondemand/getting-started here]
 * Create a new Selenium test
 * Add a new job on Jenkins for executing Selenium tests
 * Use of Sauce OnDemand Plugin on Jenkins
 * Verify test on Sauce Labs

== @OPS ==

 * Create and configure a new application on RUN@Cloud
 * Create a new job for deploying on integration environment (HSQLDB)
 * Create and configure a new MySQL database
 * Create a new job for deploying on production environment (MySQL, Elasticity)
 * Monitoring with New Relic
 * Logs with Papertrail

== @PERF ==

 * Configure redundancy and scale
 * Stress test with JMeter
 * Monitoring with New Relic
 * Verify elasticity

== @ADMIN ==

 * Manage user, group
 * Using of CloudBees SDK
 * Configure SSH Key

= Questions =

 * Can we use CloudBees SDK for managing my account (User, subscription administration)?
 * Can we launch a Selenium test on SauceLabs directly from a job configured inside Jenkins?
 * Can we create a stress test by using JMeter for showing the elasticity of an application which is running on CloudBees?
 * Can we browse Git repository directly from CloudBees?