#summary RemoteIpValve is a Tomcat port of Apache mod_remoteip to handle x-forwarded-for and x-forwarded-proto http headers
#labels tomcat,proxy,loadbalancer

= Description =
The RemoteIpValve is a Tomcat port of [http://httpd.apache.org/docs/trunk/mod/mod_remoteip.html mod_remoteip], this valve replaces the apparent client remote IP address and hostname for the request with the IP address list presented by a proxy or a load balancer via a request headers (e.g. "{{{X-Forwarded-For}}}"). 

Another feature of this valve is to replace the apparent scheme ({{{http}}}/{{{https}}}) and server port with the scheme presented by a proxy or a load balancer via a request header (e.g. "{{{X-Forwarded-Proto}}}"). 

= Valve Configuration =

|| *RemoteIpValve property* || *Description* || *Equivalent mod_remoteip directive* || *Format* || *Default Value* ||
|| remoteIPHeader || Name of the Http Header read by this servlet filter that holds the list of traversed IP addresses starting from the requesting client || RemoteIPHeader || Compliant http header name like {{{x-forwarded-for}}} or {{{X-Client-IP}}} || x-forwarded-for ||
|| internalProxies || List of internal proxies ip adress. If they appear in the {{{remoteIpHeader}}} value, they will be trusted and will not appear in the {{{proxiesHeader}}} value || RemoteIPInternalProxy || Comma delimited list of regular expressions (in the syntax supported by the [http://java.sun.com/javase/6/docs/api/index.html?java/util/regex/Pattern.html java.util.regex.Pattern] library) || 10\.\d{1,3}\.\d{1,3}\.\d{1,3}, 192\.168\.\d{1,3}\.\d{1,3}, 169\.254\.\d{1,3}\.\d{1,3}, 127\.\d{1,3}\.\d{1,3}\.\d{1,3}. By default, 10/8, 192.168/16, 169.254/16 and 127/8 are allowed ; 172.16/12 has not been enabled by default because it is complex to describe with regular expressions ||
|| proxiesHeader || Name of the http header created by this servlet filter to hold the list of proxies that have been processed in the incoming {{{remoteIPHeader}}} || RemoteIPProxiesHeader || Compliant http header name || x-forwarded-by ||
|| trustedProxies || List of trusted proxies ip adress. If they appear in the {{{remoteIpHeader}}} value, they will be trusted and will appear in the {{{proxiesHeader}}} value || RemoteIPTrustedProxy || Comma delimited list of regular expressions (in the syntax supported by the [http://java.sun.com/javase/6/docs/api/index.html?java/util/regex/Pattern.html java.util.regex.Pattern] library) ||   ||
|| protocolHeader || Name of the http header read by this servlet filter that holds the flag that this request  || N/A || Compliant http header name like {{{X-Forwarded-Proto}}}, {{{X-Forwarded-Ssl}}} or {{{Front-End-Https}}} || {{{null}}} || 
|| protocolHeaderHttpsValue || Value of the {{{protocolHeader}}} to indicate that it is an Https request || N/A || String like {{{https}}} or {{{ON}}} || {{{https}}} ||


This Valve may be attached to any Container, depending on the granularity of the filtering you wish to perform.

== Basic configuration to handle {{{x-forwarded-for}}} ==

The valve will process the {{{x-forwarded-for}}} http header. 

{{{
<Host ... >
   ...
   <Valve className="org.apache.catalina.connector.RemoteIpValve" />
   ...
   <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs" prefix="localhost_access_log."
      suffix=".txt" pattern="common" resolveHosts="false" />
   ...
</Host>
}}}

== Basic configuration to handle {{{x-forwarded-for}}} and {{{x-forwarded-proto}}} ==

The valve will process {{{x-forwarded-for}}} and {{{x-forwarded-proto}}} http headers. Expected value for {{{x-forwarded-proto}}} https connections is {{{https}}} (case insensitive).

{{{
<Host ... >
   ...
   <Valve className="org.apache.catalina.connector.RemoteIpValve" protocolHeader="x-forwarded-proto" />
   <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs" prefix="localhost_access_log."
      suffix=".txt" pattern="common" resolveHosts="false" />
   ...
</Host>
}}}

= Advanced samples =

=== Sample with internal proxies ===


RemoteIpValve configuration:

{{{
<Valve 
  className="org.apache.catalina.connector.RemoteIpValve"
  allowedInternalProxies="192\.168\.0\.10, 192\.168\.0\.11"
  remoteIPHeader="x-forwarded-for"
  remoteIPProxiesHeader="x-forwarded-by"
  protocolHeader="x-forwarded-proto"
  />
}}}

Request values:
|| *property* || *Value Before RemoteIpValve* || *Value After RemoteIpValve* ||
|| request.remoteAddr || 192.168.0.10 || 140.211.11.130 ||
|| request.header`[`'x-forwarded-for'`]` || 140.211.11.130, 192.168.0.10 || null ||
|| request.header`[`'x-forwarded-by'`]` || null || null ||
|| request.header`[`'x-forwarded-proto'`]` || https || https ||
|| request.scheme || http || https ||
|| request.secure || false || true ||
|| request.serverPort || 80 || 443 ||

Note : {{{x-forwarded-by}}} header is null because only internal proxies as been traversed by the request.
{{{x-forwarded-by}}} is null because all the proxies are trusted or internal.

=== Sample with trusted proxies ===


RemoteIpValve configuration:

{{{
<Valve 
  className="org.apache.catalina.connector.RemoteIpValve"
  allowedInternalProxies="192\.168\.0\.10, 192\.168\.0\.11"
  remoteIPHeader="x-forwarded-for"
  remoteIPProxiesHeader="x-forwarded-by"
  trustedProxies="proxy1, proxy2"
  />
}}}

Request values:
|| *property* || *Value Before RemoteIpValve* || *Value After RemoteIpValve* ||
|| request.remoteAddr || 192.168.0.10 || 140.211.11.130 ||
|| request.header`[`'x-forwarded-for'`]` || 140.211.11.130, proxy1, proxy2 || null ||
|| request.header`[`'x-forwarded-by'`]` || null || proxy1, proxy2 ||

Note : {{{proxy1}}} and {{{proxy2}}} are both trusted proxies that come in {{{x-forwarded-for}}} header, they both
are migrated in {{{x-forwarded-by}}} header. {{{x-forwarded-by}}} is null because all the proxies are trusted or internal.

=== Sample with internal and trusted proxies ===


RemoteIpValve configuration:

{{{
<Valve 
  className="org.apache.catalina.connector.RemoteIpValve"
  allowedInternalProxies="192\.168\.0\.10, 192\.168\.0\.11"
  remoteIPHeader="x-forwarded-for"
  remoteIPProxiesHeader="x-forwarded-by"
  trustedProxies="proxy1, proxy2"
  />
}}}

Request values:
|| *property* || *Value Before RemoteIpValve* || *Value After RemoteIpValve* ||
|| request.remoteAddr || 192.168.0.10 || 140.211.11.130 ||
|| request.header`[`'x-forwarded-for'`]` || 140.211.11.130, proxy1, proxy2, 192.168.0.10 || null ||
|| request.header`[`'x-forwarded-by'`]` || null || proxy1, proxy2 ||

Note : {{{proxy1}}} and {{{proxy2}}} are both trusted proxies that come in {{{x-forwarded-for}}} header, they both
are migrated in {{{x-forwarded-by}}} header. As {{{192.168.0.10}}} is an internal proxy, it does not appear in
{{{x-forwarded-by}}}. {{{x-forwarded-by}}} is null because all the proxies are trusted or internal.

=== Sample with an untrusted proxy ===


RemoteIpValve configuration:

{{{
<Valve 
  className="org.apache.catalina.connector.RemoteIpValve"
  allowedInternalProxies="192\.168\.0\.10, 192\.168\.0\.11"
  remoteIPHeader="x-forwarded-for"
  remoteIPProxiesHeader="x-forwarded-by"
  trustedProxies="proxy1, proxy2"
  />
}}}

Request values:
|| *property* || *Value Before RemoteIpValve* || *Value After RemoteIpValve* ||
|| request.remoteAddr || 192.168.0.10 || untrusted-proxy ||
|| request.header`[`'x-forwarded-for'`]` || 140.211.11.130, untrusted-proxy, proxy1 || 140.211.11.130 ||
|| request.header`[`'x-forwarded-by'`]` || null || proxy1 ||

Note : {{{x-forwarded-by}}} holds the trusted proxy {{{proxy1}}}. {{{x-forwarded-by}}} holds
{{{140.211.11.130}}} because {{{untrusted-proxy}}} is not trusted and thus, we can not trust that
{{{untrusted-proxy}}} is the actual remote ip. {{{request.remoteAddr}}} is {{{untrusted-proxy}}} that is an IP
verified by {{{proxy1}}}.

= Install / Download =
 * Jar : Drop the jar [http://xebia-france.googlecode.com/svn/repository/maven2/fr/xebia/tomcat/extras/xebia-tomcat-extras/0.6/xebia-tomcat-extras-0.6.jar xebia-tomcat-extras-0.6.jar] in Tomcat's classpath (e.g. under {{{$TOMCAT_HOME/lib}}})
 * Java class : [http://xebia-france.googlecode.com/svn/tomcat/xebia-tomcat-extras/tags/xebia-tomcat-extras-0.6/src/main/java/org/apache/catalina/connector/RemoteIpValve.java RemoteIpValve.java]
 * Java project : {{{svn checkout http://xebia-france.googlecode.com/svn/tomcat/xebia-tomcat-extras/tags/xebia-tomcat-extras-0.6/}}}

= Implementation Details =

This valve proceeds as follows: 

If the incoming {{{request.getRemoteAddr()}}} matches the valve's list of internal proxies :

 * Loop on the comma delimited list of IPs and hostnames passed by the preceding load balancer or proxy in the given request's Http header named {{{$remoteIPHeader}}} (default value {{{x-forwarded-for}}}). Values are processed in right-to-left order.
 * For each ip/host of the list:
  * if it matches the internal proxies list, the ip/host is swallowed
  * if it matches the trusted proxies list, the ip/host is added to the created proxies header
  * otherwise, the ip/host is declared to be the remote ip and looping is stopped.
 * If the request http header named {{{$protocolHeader}}} (e.g. {{{x-forwarded-for}}}) equals to the value of {{{protocolHeaderHttpsValue}}} configuration parameter (default {{{https}}}) then {{{request.isSecure = true}}}, {{{request.scheme = https}}} and {{{request.serverPort = 443}}}. Note that 443 can be overwritten with the {{{$httpsServerPort}}} configuration parameter.

*Regular expression vs. IP address blocks:* {{{mod_remoteip}}} allows to use address blocks (e.g. {{{192.168/16}}}) to configure {{{RemoteIPInternalProxy}}} and {{{RemoteIPTrustedProxy}}} ; as Tomcat doesn't have a library similar to [http://apr.apache.org/docs/apr/1.3/group__apr__network__io.html#gb74d21b8898b7c40bf7fd07ad3eb993d apr_ipsubnet_test], {{{RemoteIpValve}}} uses regular expression to configure {{{internalProxies}}} and {{{trustedProxies}}} in the same fashion as [http://tomcat.apache.org/tomcat-6.0-doc/api/index.html?org/apache/catalina/valves/RequestFilterValve.html RequestFilterValve] does.

*Package org.apache.catalina.connector vs. org.apache.catalina.valves*: This valve is temporarily located in {{{org.apache.catalina.connector}}} package instead of {{{org.apache.catalina.valves}}} because it uses {{{protected}}} visibility of [http://tomcat.apache.org/tomcat-6.0-doc/api/org/apache/catalina/connector/Request.html#remoteAddr Request#remoteAddr] and [http://tomcat.apache.org/tomcat-6.0-doc/api/org/apache/catalina/connector/Request.html#remoteHost Request#remoteHost]. This valve could move to {{{org.apache.catalina.valves}}} if [http://tomcat.apache.org/tomcat-6.0-doc/api/org/apache/catalina/connector/Request.html#setRemoteAddr(java.lang.String) Request#setRemoteAddr(String)] and [http://tomcat.apache.org/tomcat-6.0-doc/api/org/apache/catalina/connector/Request.html#setRemoteHost(java.lang.String) Request#setRemoteHost(String)] were modified to no longer be no-op but actually set the underlying property.