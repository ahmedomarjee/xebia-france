<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:lang="http://www.springframework.org/schema/lang"
   xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
   xmlns:security="http://cxf.apache.org/configuration/security" xmlns:sec="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
		http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">
   
   <!-- JMX -->
   <bean id="servletContextAwareMbeanServer" class="fr.xebia.management.ServletContextAwareMBeanServerFactory">
      <property name="mbeanServer" ref="mbeanServer" />
   </bean>
   <context:mbean-server id="mbeanServer" />
   <context:mbean-export server="servletContextAwareMbeanServer" />

   <!-- SECURITY -->
   <sec:http auto-config='true'>
      <sec:intercept-url pattern="/services/**" access="ROLE_USER" />
      <sec:http-basic />
      <sec:anonymous />
   </sec:http>

   <sec:authentication-provider>
      <sec:user-service>
         <sec:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
         <sec:user name="user" password="user" authorities="ROLE_USER" />
      </sec:user-service>
   </sec:authentication-provider>

   <!-- JPA / ENTITY MANAGER / HIBERNATE -->
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="hibernate.UpdateTimestampsCache, hibernate.StandardQueryCache, countryCache">
      <property name="persistenceUnitName" value="jmx-demo-persistence-unit" />
      <property name="dataSource" ref="dataSource" />
      <property name="loadTimeWeaver">
         <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
      </property>
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
            <property name="showSql" value="true" />
            <property name="generateDdl" value="true" />
         </bean>
      </property>
      <property name="jpaProperties">
         <props>
            <!-- Override properties defined in /META-INF/persistence.xml -->
            <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
            <prop key="hibernate.cache.use_query_cache">true</prop>
            <prop key="hibernate.cache.use_second_level_cache">true</prop>
            <prop key="hibernate.cache.use_structured_entries">true</prop>
            <prop key="hibernate.current_session_context_class">thread</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
            <prop key="hibernate.format_sql">true</prop>
            <prop key="hibernate.generate_statistics">true</prop>
            <prop key="hibernate.use_sql_comments">true</prop>
            <prop key="javax.persistence.transactionType">RESOURCE_LOCAL</prop>
         </props>
      </property>
   </bean>
   <bean id="hibernateStatistics" class="org.hibernate.jmx.StatisticsService">
      <property name="statisticsEnabled" value="true" />
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>

   <bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory" />

   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
   </bean>

   <!-- EH CACHE -->
   <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
      <property name="cacheManagerName" value="jmxDemoCacheManager" />
      <property name="shared" value="true" />
   </bean>
   <bean id="jmxDemoCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
      <property name="cacheManager" ref="cacheManager" />
      <property name="cacheName" value="jmxDemoCache" />
      <property name="diskExpiryThreadIntervalSeconds" value="120" />
      <property name="diskPersistent" value="false" />
      <property name="eternal" value="false" />
      <property name="maxElementsInMemory" value="10000" />
      <property name="maxElementsOnDisk" value="20000" />
      <property name="memoryStoreEvictionPolicy" value="LRU" />
      <property name="overflowToDisk" value="true" />
      <!-- 1800 seconds = 30 mins -->
      <property name="timeToIdle" value="1800" />
      <property name="timeToLive" value="1800" />
   </bean>
   <bean id="countryCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
      <property name="cacheManager" ref="cacheManager" />
      <property name="cacheName" value="fr.xebia.demo.jmx.model.Country" />
   </bean>
   <bean id="hibernate.UpdateTimestampsCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
      <property name="cacheManager" ref="cacheManager" />
      <property name="cacheName" value="org.hibernate.cache.UpdateTimestampsCache" />
   </bean>
   <bean id="hibernate.StandardQueryCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
      <property name="cacheManager" ref="cacheManager" />
      <property name="cacheName" value="org.hibernate.cache.StandardQueryCache" />
   </bean>

   <bean id="managementService" class="net.sf.ehcache.management.ManagementService" init-method="init">
      <constructor-arg ref="servletContextAwareMbeanServer" />
      <constructor-arg ref="cacheManager" />
      <constructor-arg index="2" value="true" />
      <constructor-arg index="3" value="true" />
      <constructor-arg index="4" value="true" />
      <constructor-arg index="5" value="true" />
   </bean>

   <!-- CXF -->
   <import resource="classpath:META-INF/cxf/cxf.xml" />
   <import resource="classpath:META-INF/cxf/cxf-extension-http.xml" />
   <import resource="classpath:META-INF/cxf/cxf-extension-jaxws.xml" />
   <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
   <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

   <bean id="cxf" class="org.apache.cxf.bus.CXFBusImpl">
      <property name="id" value="jmx-demo-cxf-bus" />
   </bean>
   <bean id="org.apache.cxf.management.InstrumentationManager" class="org.apache.cxf.management.jmx.InstrumentationManagerImpl">
      <property name="server" ref="servletContextAwareMbeanServer" />
      <property name="enabled" value="true" />
      <property name="createMBServerConnectorFactory" value="false" />
   </bean>
   <bean id="CounterRepository" class="org.apache.cxf.management.counters.CounterRepository">
      <property name="bus" ref="cxf" />
   </bean>


   <bean id="helloWorldServiceImpl" class="fr.xebia.demo.jmx.webservice.HelloWorldServiceImpl" />
   <jaxws:endpoint id="helloWorldService" implementor="#helloWorldServiceImpl" address="/helloWorldService" endpointName="se:helloWorldServiceSOAP"
      serviceName="se:helloWorldService" xmlns:se="http://www.xebia.fr/demo/jmx/webservice">
      <jaxws:features>
         <bean class="org.apache.cxf.feature.LoggingFeature" />
         <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature" />
      </jaxws:features>
      <jaxws:properties>
         <entry key="faultStackTraceEnabled" value="true" />
      </jaxws:properties>
   </jaxws:endpoint>

   <jaxws:client id="helloWorldServiceClient-helloWorldServiceException" serviceClass="fr.xebia.demo.jmx.webservice.HelloWorldService"
      address="http://localhost:8080/jmx-demo/faults/hello-world-service-exception.jsp">
      <jaxws:features>
         <bean class="org.apache.cxf.feature.LoggingFeature" />
         <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature" />
      </jaxws:features>
   </jaxws:client>

   <jaxws:client id="helloWorldServiceClient-runtimeException" serviceClass="fr.xebia.demo.jmx.webservice.HelloWorldService"
      address="http://localhost:8080/jmx-demo/faults/runtime-exception.jsp">
      <jaxws:features>
         <bean class="org.apache.cxf.feature.LoggingFeature" />
         <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature" />
      </jaxws:features>
   </jaxws:client>

   <jaxws:client id="helloWorldServiceClient-404Exception" serviceClass="fr.xebia.demo.jmx.webservice.HelloWorldService"
      address="http://localhost:8080/jmx-demo/faults/this-page-does-not-exist-404.jsp">
      <jaxws:features>
         <bean class="org.apache.cxf.feature.LoggingFeature" />
         <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature" />
      </jaxws:features>
   </jaxws:client>

   <jaxws:client id="helloWorldServiceClient-ok" serviceClass="fr.xebia.demo.jmx.webservice.HelloWorldService" address="http://localhost:8080/jmx-demo/services/helloWorldService">
      <jaxws:features>
         <bean class="org.apache.cxf.feature.LoggingFeature" />
         <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature" />
      </jaxws:features>
   </jaxws:client>
   <http-conf:conduit name="{http://webservice.jmx.demo.xebia.fr/}HelloWorldServicePort.http-conduit">
      <http-conf:authorization>
         <security:UserName>user</security:UserName>
         <security:Password>user</security:Password>
      </http-conf:authorization>
   </http-conf:conduit>

   <!-- THREAD POOL -->
   <bean id="threadPool" class="fr.xebia.springframework.concurrent.ThreadPoolExecutorFactory">
      <property name="nbThreads" value="10" />
      <property name="queueCapacity" value="15" />
   </bean>

   <!-- DATASOURCE -->

   <bean id="embeddedDataSource" class="fr.xebia.springframework.jdbc.DataSourceFactory">
      <property name="url" value="jdbc:h2:mem:jmx-demo-db" />
      <property name="driverClassName" value="org.h2.Driver" />
      <property name="username" value="sa" />
      <property name="password" value="" />
      <property name="maxActive" value="10" />
      <property name="maxWait" value="50" />
   </bean>

   <jee:jndi-lookup id="jmxDemoDataSource" jndi-name="java:comp/env/jdbc/jmx-demo-data-source" />
   
   <alias name="embeddedDataSource" alias="dataSource"/>

</beans>
